# More snippets for Go

# override default error snippet
snippet err "Error panic" !b
if err != nil {
	panic(err)
}
${0}
endsnippet

snippet fake "counterfeiter fake" b
//go:generate counterfeiter -o fakes/${3}.go --fake-name ${2} . ${1:${VISUAL}}
endsnippet

snippet println "fmt.Println(...)"
fmt.Println(${0:${VISUAL}})
endsnippet

snippet printf "fmt.Printf(format, ...)"
fmt.Printf("${1:%s}", ${0:${VISUAL}})
endsnippet

snippet desc "Ginkgo Describe" b
Describe("${1:something}", func() {
	${0:${VISUAL}}
})
endsnippet

snippet cont "Ginkgo Context" b
Context("${1:something}", func() {
	${0:${VISUAL}}
})
endsnippet

snippet bef "Ginkgo BeforeEach" b
BeforeEach(func() {
	${0:${VISUAL}}
})
endsnippet

snippet aft "Ginkgo AfterEach" b
AfterEach(func() {
	${0:${VISUAL}}
})
endsnippet

snippet just "Ginkgo JustBeforeEach" b
JustBeforeEach(func() {
	${0:${VISUAL}}
})
endsnippet

snippet it "Ginkgo It" b
It("${1:does something}", func() {
	${0:${VISUAL}}
})
endsnippet

snippet exto "Gomega Expect(...).To(...)" b
Expect(${1:actual}).To(${0:${VISUAL}})
endsnippet

snippet exnt "Gomega Expect(...).NotTo(...)" b
Expect(${1:actual}).NotTo(${0:${VISUAL}})
endsnippet

snippet extn "Gomega Expect(...).ToNot(...)" b
Expect(${1:actual}).ToNot(${0:${VISUAL}})
endsnippet

snippet exeo "Gomega Expect(err).To(HaveOccurred())" b
Expect(err).To(HaveOccurred())
endsnippet

snippet exen "Gomega Expect(err).NotTo(HaveOccurred())" b
Expect(err).NotTo(HaveOccurred())
endsnippet

# vim:ft=snippets:
